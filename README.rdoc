= ruby-ogg

== Synopsis

ruby-ogg brings pure Ruby love to the Ogg container format. It provides
a nice abstraction which permits you to access packets from an Ogg bitstream
without worrying about strange things such as "captures" and "pages".
For more information about Ogg bitstreams check out the blog post at
http://dismaldenizen.wordpress.com/2010/08/20/the-ogg-container-format-explained

 require 'ogg'
 
 open("file.ogg", "rb") do |file|
   dec = Ogg::Decoder.new(file) # Create a decoder for an Ogg file
   packet = dec.read_packet     # Direct access to packet, no pages!
   # Do something with the packet...
 end

== Vorbis

Vorbis is not the same as Ogg. Vorbis is an audio codec which is commonly
packed in the Ogg container format with the file extension ".ogg". Because
Vorbis has become so deeply associated with Ogg (and I'm such a nice guy), a 
Vorbis metadata decoder is bundled with ruby-ogg. This provides
a good example of how to use ruby-ogg, and is also fully functional. See the 
Vorbis::Info documentation for more information.

 require 'vorbis'
 
 Vorbis::Info.open('echoplex.ogg') do |info|
   info.comments[:artist].first #=> "Nine Inch Nails"
   info.comments[:title].first  #=> "Echoplex"
   info.sample_rate             #=> 44100
 end

== Features

* 100% pure Ruby
* Read Ogg bitstreams
* Read Vorbis metadata
* Optionally validate page integrity with CRCs
  (eg <code>Ogg::Decoder.new(file, :verify_checksum => true)</code>)

== TODO

* Write Ogg bitstreams
* Write Vorbis metadata

== Links

* Bug reports: http://github.com/anibali/ruby-ogg/issues
* Documentation: http://rdoc.info/github/anibali/ruby-ogg/master/frames
